// Generated by view binder compiler. Do not edit!
package com.dicoding.todoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.todoapp.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTaskDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnDeleteTask;

  @NonNull
  public final TextInputEditText detailEdDescription;

  @NonNull
  public final TextInputEditText detailEdDueDate;

  @NonNull
  public final TextInputEditText detailEdTitle;

  private ActivityTaskDetailBinding(@NonNull LinearLayout rootView, @NonNull Button btnDeleteTask,
      @NonNull TextInputEditText detailEdDescription, @NonNull TextInputEditText detailEdDueDate,
      @NonNull TextInputEditText detailEdTitle) {
    this.rootView = rootView;
    this.btnDeleteTask = btnDeleteTask;
    this.detailEdDescription = detailEdDescription;
    this.detailEdDueDate = detailEdDueDate;
    this.detailEdTitle = detailEdTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTaskDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTaskDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_task_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTaskDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete_task;
      Button btnDeleteTask = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteTask == null) {
        break missingId;
      }

      id = R.id.detail_ed_description;
      TextInputEditText detailEdDescription = ViewBindings.findChildViewById(rootView, id);
      if (detailEdDescription == null) {
        break missingId;
      }

      id = R.id.detail_ed_due_date;
      TextInputEditText detailEdDueDate = ViewBindings.findChildViewById(rootView, id);
      if (detailEdDueDate == null) {
        break missingId;
      }

      id = R.id.detail_ed_title;
      TextInputEditText detailEdTitle = ViewBindings.findChildViewById(rootView, id);
      if (detailEdTitle == null) {
        break missingId;
      }

      return new ActivityTaskDetailBinding((LinearLayout) rootView, btnDeleteTask,
          detailEdDescription, detailEdDueDate, detailEdTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
